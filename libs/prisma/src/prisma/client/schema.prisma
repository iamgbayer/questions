generator client {
  provider      = "prisma-client-js"
  output        = "./client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x"]
  engineType    = "binary"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  providerId String   @unique
  provider   String
  isAdmin    Boolean  @default(false)
  email      String   @unique
  password   String   @default("")
  createdAt  DateTime @default(now())

  // Onboarding
  username  String  @unique
  onboarded Boolean @default(false)
  location  String?
  language  String?
}

model List {
  id          String   @id @default(cuid())
  title       String
  description String   @default("")
  ownerId     String
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  items       Item[]
}

model Item {
  id           String    @id @default(cuid())
  ownerId      String
  createdAt    DateTime  @default(now())
  purchaseDate DateTime?
  url          String?
  priority     Int?
  bought       Boolean   @default(false)
  description  String    @default("")
  labels       String[]  @default([])

  // Relations
  product   Product @relation(fields: [productId], references: [id])
  productId String

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  price   Price  @relation(fields: [priceId], references: [id])
  priceId String

  list   List?   @relation(fields: [listId], references: [id])
  listId String?
}

model Product {
  id       String   @id @default(cuid())
  image    String?
  title    String   @unique
  keywords String[] @default([])
  Item     Item[]
}

model Store {
  id   String @id @default(cuid())
  name String
  url  String @unique
  Item Item[]
}

model Price {
  id        String   @id @default(cuid())
  storeId   String
  productId String
  value     Float
  currency  String
  createdAt DateTime @default(now())
  Item      Item[]
}
